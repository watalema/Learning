#19.删除链表的倒数第N个节点
#我的解法：前指针先走n步，前后指针一起走，前指针到尾节点时，后指针所指的就是被删除的点
class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        pbf=head
        paft=head
        for i in range(n):
            pbf=pbf.next
        if pbf==None:
            return paft.next
        while pbf.next!=None:
            pbf=pbf.next
            paft=paft.next
        paft.next=paft.next.next
        return head
      
#优秀解法：思路一样，改进处是一趟解决
class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        dummy_head = ListNode(-1)
        dummy_head.next = head
        prev = dummy_head
        slow_head = dummy_head

        count = 0
        while prev and slow_head:
            if not prev.next:
                slow_head.next = slow_head.next.next

            prev = prev.next

            if count >= n:
                slow_head = slow_head.next
            count += 1

        return dummy_head.next
